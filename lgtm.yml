# Config file for lgtm.com static analysis.

path_classifiers:
  test:
    - test
  # The default behavior is to tag all files created during the
  # build as `generated`. Results are hidden for generated code. You can tag 
  # further files as being generated by adding them to the `generated` section.
  generated:
    - aclocal.m4
    - configure
    - ltmain.sh

queries:
  # Start by hiding the results of all queries.
  - exclude: "*"
  # Then include all queries tagged 'security' and 'correctness', and with a severity of
  # 'error'.
  - include:           
      tags:
        - "security"
        - "correctness"           
      severity: "error"

# Environment variables available to the steps:

# LGTM_SRC
#   The root of the source tree.
# LGTM_WORKSPACE
#   An existing (initially empty) folder outside the source tree.
#   Used for temporary download and setup commands.

extraction: 
  cpp:
    packages:
      - libpq-dev
    after_prepare:
      - export GNU_MAKE=make
      - export GIT=true
    # The `index` step builds the code and extracts information during the
    # build process.
    index:
      build_command:
        - $GNU_MAKE -j2 -s
      all_solutions: true
      # Specify MSBuild settings
      msbuild:
        # Specify a list of additional arguments to MSBuild. Default: empty.
        arguments: /p:Platform=x64 /p:Configuration=Release
        # Specify the MSBuild configuration to use, for example, debug or release.
        # Default: read from the solution file or files.
        configuration:
        # Specify the platform to target, for example: x86, x64, or Any CPU.
        # Default: read from the solution file or files.
        platform:
        # Specify the MSBuild target. Default: rebuild.
        target:

  python:
    after_prepare:
      - export PATH=$LGTM_WORKSPACE/tools:$PATH
